<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="recording" default="false"/>
  <arg name="teleop" default="false"/>
  <arg name="test" default="true"/>
  <arg name="world_name" default="worlds/empty.world"/>
  <arg name="robot_namespace" default="/" />
  <arg name="x" value="0"/>
  <arg name="y" value="0"/>
  <arg name="z" value="0"/>
  <arg name="yaw" value="0"/>
  <arg name="model" default="$(find caato2_description)/urdf/caato2.urdf.xacro"/>
  <arg name="rvizconfig" default="$(find caato2_description)/rviz/test.rviz"/>

  <!-- Gazebo empty world launch file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="recording" value="$(arg recording)"/>
    
  </include>

  <!-- Robot Description from URDF -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg model)'" />


  <!-- Nodes-->

  <!-- Spawn robot in gazebo -->
  <node name="spawn_caato2_model" pkg="gazebo_ros" type="spawn_model"
    args="-x $(arg x)
    -y $(arg y)
    -z $(arg z)
    -Y $(arg yaw)
    -unpause
    -urdf
    -param robot_description
    -model $(arg robot_namespace)" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <!-- <param name="publish_frequency" type="double" value="30.0" /> -->
  </node>

  <node if="$(arg test)" name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />
  <node unless="$(arg test)" name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  <node if="$(arg teleop)" name="teleop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen"/>


    <!-- Launch multi laser merger -->
  <arg name="start_delay" default="3" />
  <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen"
    launch-prefix="bash -c 'sleep $(arg start_delay); $0 $@'">
    <param name="destination_frame" value="base_link"/>
    <param name="cloud_destination_topic" value="/merged_cloud"/>
    <param name="scan_destination_topic" value="/scan"/>
    <param name="laserscan_topics" value ="/front_left/scan /back_right/scan" /> <!-- LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE -->

    <param name="angle_min" value="-3.14"/>
    <param name="angle_max" value="3.14"/>
    <param name="angle_increment" value="0.0058"/>
    <param name="scan_time" value="0.0333333"/>
    <param name="range_min" value="0.30"/>
    <param name="range_max" value="50.0"/>
	</node>
</launch>
